name: Full CI - HealthOps MERN Stack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install-audit:
    name: Install & Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Backend Dependencies
        run: npm install
        working-directory: ./server

      - name: 📦 Install Frontend Dependencies
        run: npm install
        working-directory: ./client

      - name: 🔒 Audit Backend
        run: npm audit --audit-level=moderate || true
        working-directory: ./server

      - name: 🔒 Audit Frontend
        run: npm audit --audit-level=moderate || true
        working-directory: ./client

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: install-audit

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Backend
        run: npm install
        working-directory: ./server

      - name: 📦 Install Frontend
        run: npm install
        working-directory: ./client

      - name: 🏗️ Build Frontend
        run: CI=false npm run build
        working-directory: ./client

      - name: 🔍 Run ESLint (ignores handled in eslint.config.js)
        run: npm run lint
        working-directory: ./server

      - name: 🧪 Run Backend Tests (ESM Compatible)
        run: node --experimental-vm-modules ./node_modules/jest/bin/jest.js tests --testEnvironment=node --testTimeout=10000
        working-directory: ./server

      - name: 🐳 Build Docker Image
        run: docker build -t healthops-backend .
        working-directory: ./server

      - name: ✅ Confirm React Built
        run: test -f ./client/build/index.html
